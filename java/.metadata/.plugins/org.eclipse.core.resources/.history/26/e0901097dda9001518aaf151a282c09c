package sort;

import org.junit.Test;

public class Quicksort {

	public void arrSwap(int[] arr, int posA, int posB) {
		int tmp = arr[posA];
		arr[posA] = arr[posB];
		arr[posB] = tmp;
	}

	public int partition(int[] arr, int start, int end) {
		int pivotPos = start;
		int pivot = arr[start];
		for (int i = start; i <= end; i++) {
			if (arr[i] < pivot) {
				pivotPos++;
				arrSwap(arr, pivotPos, i);
			}
		}
		arrSwap(arr, start, pivotPos);
		return pivotPos;
	};

	public void quicksort(int[] arr, int start, int end) {
		int pivotPos = partition(arr, start, end);
		quicksort(arr, start, pivotPos - 1);
		quicksort(arr, pivotPos + 1, end);
	}

	@Test
	public void testQuicksort() {
		int[] arr = new int[] { 8, 2, 4, 65, 2, 4, 7, 1, 9, 0, 2, 34, 12 };
		quicksort(arr, 0, arr.length - 1);
		System.out.println(arr);
	}
}
